/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ipclient;

import framework.dboperations.DBOperations;
import java.io.File;
import java.io.InputStream;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Aswin
 */
public class DashBoard extends javax.swing.JFrame {
    
    IPClient parent;
    /**
     * Creates new form DashBoard
     */
    public DashBoard(IPClient par) {
        initComponents();
        parent = par;
        parent.setVisible(false);
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PublishButton = new javax.swing.JButton();
        SearchButton = new javax.swing.JButton();
        LogoutButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButtonUnpublish = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gangshare-D Dashboard");

        PublishButton.setText("Publish a File");
        PublishButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PublishButtonActionPerformed(evt);
            }
        });

        SearchButton.setText("Search");
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        LogoutButton.setText("Logout");
        LogoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("What do you want to do?");

        jButtonUnpublish.setText("Un-publish");
        jButtonUnpublish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUnpublishActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(PublishButton, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                            .addComponent(SearchButton, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                            .addComponent(LogoutButton, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                            .addComponent(jButtonUnpublish, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(jLabel1)))
                .addContainerGap(81, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(65, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(46, 46, 46)
                .addComponent(PublishButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SearchButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonUnpublish)
                .addGap(5, 5, 5)
                .addComponent(LogoutButton)
                .addGap(58, 58, 58))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
        // TODO add your handling code here:
        Search s = new Search(this,parent);
        s.setVisible(true);
        this.setVisible(false);

    }//GEN-LAST:event_SearchButtonActionPerformed

    private void PublishButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PublishButtonActionPerformed

        new PublishFrame(this,parent);
    }//GEN-LAST:event_PublishButtonActionPerformed

    private void LogoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutButtonActionPerformed
        // Send logout message to server
        /*
         * Workflow for logout:
         * 1. P1 sends logout message to the server
         * 2. Server finds another peer p2 to assign p1's hash space
         * 3. Server finds the new hashlist by assigning p1's hash space to p2
         * 4. Server broadcasts the newly computed hashlist to all the peers
         * 5. Server sends p2 asking it to get the db from p1
         * 6. p2 asks for the file info db to p1
         * 7. p1 sends the file info to p2
         * 8. p2 acks server and says that p1 is safe to logout
         * 9. server acks p1 saying it can logout from the system now
         * 9. p1 logs out successfully and goes back to login screen
         * 10. server broadcasts an IP delete command so that the file info about P1 is deleted
         */
        
        
        String hostIP;
        try {
            hostIP = InetAddress.getLocalHost().getHostAddress();
            String msg = "100:"+hostIP;
            parent.sendMsg(msg);
            } catch (UnknownHostException ex) {
            Logger.getLogger(DashBoard.class.getName()).log(Level.SEVERE, null, ex);}
        //Receive a message from server that it can safely logout now
        String permission = parent.receiveResponse();
        
        
        //Delete the file info from its local database
        DBOperations.deleteAll(IPClient.con);
        
        //Only at the end
        parent.setVisible(true);
        this.setVisible(false);
        this.dispose();
        deleteSharedFiles();
        System.exit(0);
    }//GEN-LAST:event_LogoutButtonActionPerformed

    private void jButtonUnpublishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUnpublishActionPerformed
        // TODO add your handling code here:
        new Unpublish(this, parent).setVisible(true);
        this.setVisible(false);
        
    }//GEN-LAST:event_jButtonUnpublishActionPerformed

    public void deleteSharedFiles()
    {
        String path = "C:/GangsharedFiles";
        File folder = new File(path);
        File[] listOfFiles = folder.listFiles();
        for(int i = 0; i<listOfFiles.length;i++)
        {
            listOfFiles[i].delete();
        }
    }
    /**
     * @param args the command line arguments
     */
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton LogoutButton;
    private javax.swing.JButton PublishButton;
    private javax.swing.JButton SearchButton;
    private javax.swing.JButton jButtonUnpublish;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
